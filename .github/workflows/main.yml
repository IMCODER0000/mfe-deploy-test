name: CD (Continuous Deploy)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      triggered_by:
        description: 'Who triggered the deployment?'
        required: false
        default: 'Manual Trigger'

env:
  IMAGE_NAME: ghcr.io/imcoder0000/mfe-deploy-test
  IMAGE_TAG: latest
  DOCKER_IMAGE: ghcr.io/imcoder0000/mfe-deploy-test:latest

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create .env files for all apps
        run: |
          declare -A envs=(
            [authentication-app]="${{ secrets.AUTHENTICATION_ENV_PRODUCTION }}"
            [cart-app]="${{ secrets.CART_ENV_PRODUCTION }}"
            [dice-game-app]="${{ secrets.DICE_GAME_ENV_PRODUCTION }}"
            [game-chip-app]="${{ secrets.GAME_CHIP_ENV_PRODUCTION }}"
            [html-container]="${{ secrets.HTML_CONTAINER_ENV_PRODUCTION }}"
            [laptop-app]="${{ secrets.LAPTOP_ENV_PRODUCTION }}"
            [navigation-bar-app]="${{ secrets.NAVIGATION_BAR_ENV_PRODUCTION }}"
            [vue-board-app]="${{ secrets.VUE_BOARD_ENV_PRODUCTION }}"
          )
          for app in "${!envs[@]}"; do
            echo "${envs[$app]}" > "$app/.env"
          done

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u imcoder0000 --password-stdin

      - name: Build & Push Multi-Arch Image
        run: |
          docker buildx create --use --name builder || docker buildx use builder
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.DOCKER_IMAGE }} \
            --push .

      - name: Log out from GHCR
        run: docker logout

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: [ self-hosted, deploy-micro-frontend ]
    steps:
      - name: Deploy Container
        run: |
          echo "Starting Micro Frontend Production Deployment"
          cd /home/ec2-user/micro-frontend
          docker-compose down
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u imcoder0000 --password-stdin
          docker pull ${{ env.DOCKER_IMAGE }}
          docker image prune -f
          docker logout
          docker-compose up -d --remove-orphans
          echo "Deployment complete."
